// variables used for field creation/gameplay
const hat = "^";
const hole = "O";
const fieldCharacter = "â–‘";
const pathCharacter = "*";


class Field {
      constructor(len, width, holePercentage) {
        if (len < 3) {
          len += 3;
        }
        if (width < 3) {
          width += 3;
        }
        this.field = this.generateField(len, width, holePercentage);
        this.fieldWidth = width
        this.fieldHeight = len
      }
    
      generateField(len, width, holePercentage) {
        const newField = [];
        const spotsUsed = [
          [0, 0]
        ]
        newField.numOfHoles = Math.floor((len * width) * (holePercentage / 100));
        if( newField.numOfHoles < 2) {
          newField.numOfHoles += 2;
          if (newField.numOfHoles/ (len*width) > 0.35) {
            newField.numOfHoles --;
          }
        }
    
        //generate field grid;
        for (let l = 0; l < len; l++) {
          newField[l] = [];
          for (let w = 0; w < width; w++) {
            newField[l][w] = '';
          }
        }
    
    
    
        //place holes
    
        for (let h = 0; h < newField.numOfHoles; h++) {
          let x = Math.floor(Math.random() * width);
          let y = Math.floor(Math.random() * len);
          if (!spotsUsed.includes([y, x])) {
            newField[y][x] = hole;
            spotsUsed.push([y, x]);
          } else {
            h--;
          }
        }
    
        // fill in field with fieldCharacters;
        for (let r = 0; r < len; r++) {
          for (let c = 0; c < width; c++) {
            if (newField[r][c] === '') {
              newField[r][c] = fieldCharacter;
            }
          }
        }
    
        //place hat
        const placeHat = () => {
          console.log(len, width);
          let randomCol = Math.floor(Math.random() * width);
          let randomRow = Math.floor(Math.random() * len);
          if (randomRow === 0 && randomCol === 0) {
            placeHat();
          } else {
            newField[randomRow][randomCol] = hat;
            spotsUsed.push([randomRow, randomCol])
          }
    
        }
        placeHat();
    
        // place start
        newField[0][0] = pathCharacter;
    
        return newField;
      }
      print() {
        for (let r = 0; r < this.field.length; r++)
          console.log(String(this.field[r]));
      }
    }



    module.exports = Field, hole, hat, fieldCharacter, pathCharacter;